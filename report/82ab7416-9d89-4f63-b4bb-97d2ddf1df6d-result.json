{"name": "test_pet", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "@pytest.mark.smoke_tests\n    @pytest.mark.regress_tests\n    @pytest.mark.positive_tests\n    # Тест создания нового питомца\n    def test_pet():\n        with allure.step(\"Создаем JSON\"):\n            request = generate_json_steps.create_json_pet_required_params()\n        with allure.step(\"Отправлям запрос POST\"):\n            response_post = requests.post(urls.url_pet_post, json=request)\n        with allure.step(\"Анализируем ответ\"):\n            assert_steps.assert_not_none_id(response_post)\n        with allure.step(\"Отправлям запрос GET, чтобы проверить, что объект создан\"):\n            response_get = requests.get(urls.url_pet_get_id(str(response_post.json()['id'])))\n            assert_steps.assert_equals_response_ids(response_post, response_get)\n>           assert_steps.assert_equals_response_names(response_post, response_get)\n\ntest_pet_get.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfirst = <Response [200]>, second = <Response [200]>\n\n    def assert_equals_response_names(first, second):\n        print(\"first =\", first.json())\n        print(\"second =\", second.json())\n>       assert first.json()['name'] == second.json()['name']\nE       AssertionError\n\nSteps\\assert_steps.py:33: AssertionError"}, "steps": [{"name": "Создаем JSON", "status": "passed", "start": 1747522049563, "stop": 1747522049563}, {"name": "Отправлям запрос POST", "status": "passed", "start": 1747522049563, "stop": 1747522050268}, {"name": "Анализируем ответ", "status": "passed", "start": 1747522050268, "stop": 1747522050268}, {"name": "Отправлям запрос GET, чтобы проверить, что объект создан", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"C:\\Users\\Vitaliy\\Documents\\GitHub\\test_api_python\\test_pet_get.py\", line 27, in test_pet\n    assert_steps.assert_equals_response_names(response_post, response_get)\n  File \"C:\\Users\\Vitaliy\\Documents\\GitHub\\test_api_python\\Steps\\assert_steps.py\", line 33, in assert_equals_response_names\n    assert first.json()['name'] == second.json()['name']\n"}, "start": 1747522050268, "stop": 1747522050867}], "attachments": [{"name": "stdout", "source": "b70ec80a-9941-4820-93d5-7227f5685eca-attachment.txt", "type": "text/plain"}], "start": 1747522049563, "stop": 1747522050870, "uuid": "9fb29184-7fed-4e78-a45d-09f6c9a472e0", "historyId": "a92da8cf01cf0a6a331a79f3e786c10f", "testCaseId": "da411e484da449c4045f1d17e405a6db", "fullName": "test_pet_get#test_pet", "labels": [{"name": "tag", "value": "positive_tests"}, {"name": "tag", "value": "regress_tests"}, {"name": "tag", "value": "smoke_tests"}, {"name": "suite", "value": "test_pet_get"}, {"name": "host", "value": "WIN-O890V1MPMGM"}, {"name": "thread", "value": "13384-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_pet_get"}]}